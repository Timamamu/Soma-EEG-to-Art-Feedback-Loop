# -*- coding: utf-8 -*-
"""muse_spectogram.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16Cl4nTd7ouL9DTKFA5nF18AgsJBkDSho
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install -q pandas matplotlib scipy

import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
import cv2
from scipy import signal
from pathlib import Path

# === Input and Output Paths ===
csv_folder = Path("/content/drive/MyDrive/Soma/landscape_csv")

output_dirs = {
    'TP9': Path("/content/drive/MyDrive/Soma/landscape_spectograms_tp9"),
    'AF7': Path("/content/drive/MyDrive/Soma/landscape_spectograms_af7"),
    'AF8': Path("/content/drive/MyDrive/Soma/landscape_spectograms_af8"),
    'TP10': Path("/content/drive/MyDrive/Soma/landscape_spectograms_tp10"),
}

# Create output folders
for path in output_dirs.values():
    path.mkdir(parents=True, exist_ok=True)

# Sampling rate
sr = 256

# === Loop through CSV files ===
for file in csv_folder.glob("*.csv"):
    csv_name = file.stem
    print(f"Processing: {csv_name}.csv")

    try:
        df = pd.read_csv(file)
    except Exception as e:
        print(f"Skipping {file.name}: {e}")
        continue

    for lead in ['TP9', 'AF7', 'AF8', 'TP10']:
        if lead not in df.columns:
            print(f"  {lead} missing in {file.name}")
            continue

        signal_values = df[lead].dropna().to_numpy(dtype=np.float32)
        if len(signal_values) < 256:
            print(f"  {lead}: not enough data.")
            continue

        f, t, Sxx = signal.spectrogram(signal_values, fs=sr, nperseg=256, noverlap=192)
        Sxx_db = 10 * np.log10(Sxx + 1e-10)
        img = (Sxx_db - Sxx_db.min()) / (Sxx_db.max() - Sxx_db.min())
        img = cv2.resize(img, (256, 256))
        img = (img * 255).astype(np.uint8)
        img_color = cv2.applyColorMap(img, cv2.COLORMAP_VIRIDIS)

        out_path = output_dirs[lead] / f"{csv_name}.jpeg"
        cv2.imwrite(str(out_path), img_color)

print("All spectrograms saved.")